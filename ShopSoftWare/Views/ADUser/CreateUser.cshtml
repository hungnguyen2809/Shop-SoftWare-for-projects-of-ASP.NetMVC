@model ShopSoftWare.Common.CreateUser

@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@section titlePage{Thêm mới tài khoản}


<div class="container">
    @using (Html.BeginForm("CreateUser", "ADUser", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4 style="text-transform:uppercase">Thêm mới tài khoản</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Username, new { htmlAttributes = new { @class = "form-control fix-size-textbox" }, style = "width: 400px;" })
                    <br />
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Name, new { htmlAttributes = new { @class = "form-control fix-size-textbox" }, style = "width: 400px;" })
                    <br />
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control fix-size-textbox" }, style = "width: 400px;" })
                    <br />
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RePassword, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.RePassword, new { htmlAttributes = new { @class = "form-control fix-size-textbox" }, style = "width: 400px;" })
                    <br />
                    @Html.ValidationMessageFor(model => model.RePassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Address, new { htmlAttributes = new { @class = "form-control fix-size-textbox" }, style = "width: 400px;" })
                    <br />
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control fix-size-textbox" } })
                    <br />
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Email, new { htmlAttributes = new { @class = "form-control fix-size-textbox" }, style = "width: 400px;" })
                    <br />
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Permission, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.CheckBoxFor(model => model.Permission)
                        <br />
                        @Html.ValidationMessageFor(model => model.Permission, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.CheckBoxFor(model => model.Status)
                        <br />
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-6">
                    <button class="btn btn-success btn-block" type="submit">Thêm mới tài khoản</button>
                </div>
            </div>
            <br />
            <br />
        </div>
    }
</div>

